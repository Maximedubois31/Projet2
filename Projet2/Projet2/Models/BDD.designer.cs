#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projet2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="projet2Bdd")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAssociationPreferenceJour(AssociationPreferenceJour instance);
    partial void UpdateAssociationPreferenceJour(AssociationPreferenceJour instance);
    partial void DeleteAssociationPreferenceJour(AssociationPreferenceJour instance);
    partial void InsertBesoinMateriel(BesoinMateriel instance);
    partial void UpdateBesoinMateriel(BesoinMateriel instance);
    partial void DeleteBesoinMateriel(BesoinMateriel instance);
    partial void InsertCategorieAide(CategorieAide instance);
    partial void UpdateCategorieAide(CategorieAide instance);
    partial void DeleteCategorieAide(CategorieAide instance);
    partial void InsertCodePostal(CodePostal instance);
    partial void UpdateCodePostal(CodePostal instance);
    partial void DeleteCodePostal(CodePostal instance);
    partial void InsertDemandeMateriel(DemandeMateriel instance);
    partial void UpdateDemandeMateriel(DemandeMateriel instance);
    partial void DeleteDemandeMateriel(DemandeMateriel instance);
    partial void InsertJour(Jour instance);
    partial void UpdateJour(Jour instance);
    partial void DeleteJour(Jour instance);
    partial void InsertPays(Pays instance);
    partial void UpdatePays(Pays instance);
    partial void DeletePays(Pays instance);
    partial void InsertPreferenceAide(PreferenceAide instance);
    partial void UpdatePreferenceAide(PreferenceAide instance);
    partial void DeletePreferenceAide(PreferenceAide instance);
    partial void InsertPreferenceCategorie(PreferenceCategorie instance);
    partial void UpdatePreferenceCategorie(PreferenceCategorie instance);
    partial void DeletePreferenceCategorie(PreferenceCategorie instance);
    partial void InsertRepondre(Repondre instance);
    partial void UpdateRepondre(Repondre instance);
    partial void DeleteRepondre(Repondre instance);
    partial void InsertTypeAide(TypeAide instance);
    partial void UpdateTypeAide(TypeAide instance);
    partial void DeleteTypeAide(TypeAide instance);
    partial void InsertTypeMateriel(TypeMateriel instance);
    partial void UpdateTypeMateriel(TypeMateriel instance);
    partial void DeleteTypeMateriel(TypeMateriel instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    partial void InsertVille(Ville instance);
    partial void UpdateVille(Ville instance);
    partial void DeleteVille(Ville instance);
    partial void InsertDemandeAide(DemandeAide instance);
    partial void UpdateDemandeAide(DemandeAide instance);
    partial void DeleteDemandeAide(DemandeAide instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["projet2BddConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssociationPreferenceJour> AssociationPreferenceJour
		{
			get
			{
				return this.GetTable<AssociationPreferenceJour>();
			}
		}
		
		public System.Data.Linq.Table<BesoinMateriel> BesoinMateriel
		{
			get
			{
				return this.GetTable<BesoinMateriel>();
			}
		}
		
		public System.Data.Linq.Table<CategorieAide> CategorieAide
		{
			get
			{
				return this.GetTable<CategorieAide>();
			}
		}
		
		public System.Data.Linq.Table<CodePostal> CodePostal
		{
			get
			{
				return this.GetTable<CodePostal>();
			}
		}
		
		public System.Data.Linq.Table<DemandeMateriel> DemandeMateriel
		{
			get
			{
				return this.GetTable<DemandeMateriel>();
			}
		}
		
		public System.Data.Linq.Table<Jour> Jour
		{
			get
			{
				return this.GetTable<Jour>();
			}
		}
		
		public System.Data.Linq.Table<Pays> Pays
		{
			get
			{
				return this.GetTable<Pays>();
			}
		}
		
		public System.Data.Linq.Table<PreferenceAide> PreferenceAide
		{
			get
			{
				return this.GetTable<PreferenceAide>();
			}
		}
		
		public System.Data.Linq.Table<PreferenceCategorie> PreferenceCategorie
		{
			get
			{
				return this.GetTable<PreferenceCategorie>();
			}
		}
		
		public System.Data.Linq.Table<Repondre> Repondre
		{
			get
			{
				return this.GetTable<Repondre>();
			}
		}
		
		public System.Data.Linq.Table<TypeAide> TypeAide
		{
			get
			{
				return this.GetTable<TypeAide>();
			}
		}
		
		public System.Data.Linq.Table<TypeMateriel> TypeMateriel
		{
			get
			{
				return this.GetTable<TypeMateriel>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateur
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<Ville> Ville
		{
			get
			{
				return this.GetTable<Ville>();
			}
		}
		
		public System.Data.Linq.Table<DemandeAide> DemandeAide
		{
			get
			{
				return this.GetTable<DemandeAide>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssociationPreferenceJour")]
	public partial class AssociationPreferenceJour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _DateChoix;
		
		private System.Nullable<System.DateTime> _DateRenoncementChoix;
		
		private System.Nullable<System.TimeSpan> _HeureDebutDispo;
		
		private System.Nullable<System.TimeSpan> _HeureFinDispo;
		
		private System.Nullable<int> _NumCompte;
		
		private System.Nullable<int> _IdJour;
		
		private int _Idapj;
		
		private EntityRef<Jour> _Jour;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateChoixChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChoixChanged();
    partial void OnDateRenoncementChoixChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRenoncementChoixChanged();
    partial void OnHeureDebutDispoChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHeureDebutDispoChanged();
    partial void OnHeureFinDispoChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHeureFinDispoChanged();
    partial void OnNumCompteChanging(System.Nullable<int> value);
    partial void OnNumCompteChanged();
    partial void OnIdJourChanging(System.Nullable<int> value);
    partial void OnIdJourChanged();
    partial void OnIdapjChanging(int value);
    partial void OnIdapjChanged();
    #endregion
		
		public AssociationPreferenceJour()
		{
			this._Jour = default(EntityRef<Jour>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChoix", DbType="Date")]
		public System.Nullable<System.DateTime> DateChoix
		{
			get
			{
				return this._DateChoix;
			}
			set
			{
				if ((this._DateChoix != value))
				{
					this.OnDateChoixChanging(value);
					this.SendPropertyChanging();
					this._DateChoix = value;
					this.SendPropertyChanged("DateChoix");
					this.OnDateChoixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRenoncementChoix", DbType="Date")]
		public System.Nullable<System.DateTime> DateRenoncementChoix
		{
			get
			{
				return this._DateRenoncementChoix;
			}
			set
			{
				if ((this._DateRenoncementChoix != value))
				{
					this.OnDateRenoncementChoixChanging(value);
					this.SendPropertyChanging();
					this._DateRenoncementChoix = value;
					this.SendPropertyChanged("DateRenoncementChoix");
					this.OnDateRenoncementChoixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeureDebutDispo", DbType="Time")]
		public System.Nullable<System.TimeSpan> HeureDebutDispo
		{
			get
			{
				return this._HeureDebutDispo;
			}
			set
			{
				if ((this._HeureDebutDispo != value))
				{
					this.OnHeureDebutDispoChanging(value);
					this.SendPropertyChanging();
					this._HeureDebutDispo = value;
					this.SendPropertyChanged("HeureDebutDispo");
					this.OnHeureDebutDispoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeureFinDispo", DbType="Time")]
		public System.Nullable<System.TimeSpan> HeureFinDispo
		{
			get
			{
				return this._HeureFinDispo;
			}
			set
			{
				if ((this._HeureFinDispo != value))
				{
					this.OnHeureFinDispoChanging(value);
					this.SendPropertyChanging();
					this._HeureFinDispo = value;
					this.SendPropertyChanged("HeureFinDispo");
					this.OnHeureFinDispoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="Int")]
		public System.Nullable<int> NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJour", DbType="Int")]
		public System.Nullable<int> IdJour
		{
			get
			{
				return this._IdJour;
			}
			set
			{
				if ((this._IdJour != value))
				{
					if (this._Jour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJourChanging(value);
					this.SendPropertyChanging();
					this._IdJour = value;
					this.SendPropertyChanged("IdJour");
					this.OnIdJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idapj", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Idapj
		{
			get
			{
				return this._Idapj;
			}
			set
			{
				if ((this._Idapj != value))
				{
					this.OnIdapjChanging(value);
					this.SendPropertyChanging();
					this._Idapj = value;
					this.SendPropertyChanged("Idapj");
					this.OnIdapjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jour_AssociationPreferenceJour", Storage="_Jour", ThisKey="IdJour", OtherKey="IdJour", IsForeignKey=true)]
		public Jour Jour
		{
			get
			{
				return this._Jour.Entity;
			}
			set
			{
				Jour previousValue = this._Jour.Entity;
				if (((previousValue != value) 
							|| (this._Jour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jour.Entity = null;
						previousValue.AssociationPreferenceJour.Remove(this);
					}
					this._Jour.Entity = value;
					if ((value != null))
					{
						value.AssociationPreferenceJour.Add(this);
						this._IdJour = value.IdJour;
					}
					else
					{
						this._IdJour = default(Nullable<int>);
					}
					this.SendPropertyChanged("Jour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_AssociationPreferenceJour", Storage="_Utilisateur", ThisKey="NumCompte", OtherKey="NumCompte", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.AssociationPreferenceJour.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.AssociationPreferenceJour.Add(this);
						this._NumCompte = value.NumCompte;
					}
					else
					{
						this._NumCompte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BesoinMateriel")]
	public partial class BesoinMateriel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _QuantiteMateriel;
		
		private System.Nullable<int> _IdTypeMateriel;
		
		private System.Nullable<int> _IdTypeAide;
		
		private int _IdBM;
		
		private EntityRef<TypeAide> _TypeAide;
		
		private EntityRef<TypeMateriel> _TypeMateriel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuantiteMaterielChanging(System.Nullable<int> value);
    partial void OnQuantiteMaterielChanged();
    partial void OnIdTypeMaterielChanging(System.Nullable<int> value);
    partial void OnIdTypeMaterielChanged();
    partial void OnIdTypeAideChanging(System.Nullable<int> value);
    partial void OnIdTypeAideChanged();
    partial void OnIdBMChanging(int value);
    partial void OnIdBMChanged();
    #endregion
		
		public BesoinMateriel()
		{
			this._TypeAide = default(EntityRef<TypeAide>);
			this._TypeMateriel = default(EntityRef<TypeMateriel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantiteMateriel", DbType="Int")]
		public System.Nullable<int> QuantiteMateriel
		{
			get
			{
				return this._QuantiteMateriel;
			}
			set
			{
				if ((this._QuantiteMateriel != value))
				{
					this.OnQuantiteMaterielChanging(value);
					this.SendPropertyChanging();
					this._QuantiteMateriel = value;
					this.SendPropertyChanged("QuantiteMateriel");
					this.OnQuantiteMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeMateriel", DbType="Int")]
		public System.Nullable<int> IdTypeMateriel
		{
			get
			{
				return this._IdTypeMateriel;
			}
			set
			{
				if ((this._IdTypeMateriel != value))
				{
					if (this._TypeMateriel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeMaterielChanging(value);
					this.SendPropertyChanging();
					this._IdTypeMateriel = value;
					this.SendPropertyChanged("IdTypeMateriel");
					this.OnIdTypeMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeAide", DbType="Int")]
		public System.Nullable<int> IdTypeAide
		{
			get
			{
				return this._IdTypeAide;
			}
			set
			{
				if ((this._IdTypeAide != value))
				{
					if (this._TypeAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeAideChanging(value);
					this.SendPropertyChanging();
					this._IdTypeAide = value;
					this.SendPropertyChanged("IdTypeAide");
					this.OnIdTypeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBM
		{
			get
			{
				return this._IdBM;
			}
			set
			{
				if ((this._IdBM != value))
				{
					this.OnIdBMChanging(value);
					this.SendPropertyChanging();
					this._IdBM = value;
					this.SendPropertyChanged("IdBM");
					this.OnIdBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAide_BesoinMateriel", Storage="_TypeAide", ThisKey="IdTypeAide", OtherKey="IdTypeAide", IsForeignKey=true)]
		public TypeAide TypeAide
		{
			get
			{
				return this._TypeAide.Entity;
			}
			set
			{
				TypeAide previousValue = this._TypeAide.Entity;
				if (((previousValue != value) 
							|| (this._TypeAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeAide.Entity = null;
						previousValue.BesoinMateriel.Remove(this);
					}
					this._TypeAide.Entity = value;
					if ((value != null))
					{
						value.BesoinMateriel.Add(this);
						this._IdTypeAide = value.IdTypeAide;
					}
					else
					{
						this._IdTypeAide = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeAide");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeMateriel_BesoinMateriel", Storage="_TypeMateriel", ThisKey="IdTypeMateriel", OtherKey="IdTypeMateriel", IsForeignKey=true)]
		public TypeMateriel TypeMateriel
		{
			get
			{
				return this._TypeMateriel.Entity;
			}
			set
			{
				TypeMateriel previousValue = this._TypeMateriel.Entity;
				if (((previousValue != value) 
							|| (this._TypeMateriel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeMateriel.Entity = null;
						previousValue.BesoinMateriel.Remove(this);
					}
					this._TypeMateriel.Entity = value;
					if ((value != null))
					{
						value.BesoinMateriel.Add(this);
						this._IdTypeMateriel = value.IdTypeMateriel;
					}
					else
					{
						this._IdTypeMateriel = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeMateriel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategorieAide")]
	public partial class CategorieAide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategorie;
		
		private string _LibelleCategorie;
		
		private EntitySet<PreferenceCategorie> _PreferenceCategorie;
		
		private EntitySet<TypeAide> _TypeAide;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategorieChanging(int value);
    partial void OnIdCategorieChanged();
    partial void OnLibelleCategorieChanging(string value);
    partial void OnLibelleCategorieChanged();
    #endregion
		
		public CategorieAide()
		{
			this._PreferenceCategorie = new EntitySet<PreferenceCategorie>(new Action<PreferenceCategorie>(this.attach_PreferenceCategorie), new Action<PreferenceCategorie>(this.detach_PreferenceCategorie));
			this._TypeAide = new EntitySet<TypeAide>(new Action<TypeAide>(this.attach_TypeAide), new Action<TypeAide>(this.detach_TypeAide));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategorie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategorie
		{
			get
			{
				return this._IdCategorie;
			}
			set
			{
				if ((this._IdCategorie != value))
				{
					this.OnIdCategorieChanging(value);
					this.SendPropertyChanging();
					this._IdCategorie = value;
					this.SendPropertyChanged("IdCategorie");
					this.OnIdCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleCategorie", DbType="NVarChar(50)")]
		public string LibelleCategorie
		{
			get
			{
				return this._LibelleCategorie;
			}
			set
			{
				if ((this._LibelleCategorie != value))
				{
					this.OnLibelleCategorieChanging(value);
					this.SendPropertyChanging();
					this._LibelleCategorie = value;
					this.SendPropertyChanged("LibelleCategorie");
					this.OnLibelleCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategorieAide_PreferenceCategorie", Storage="_PreferenceCategorie", ThisKey="IdCategorie", OtherKey="IdCategorie")]
		public EntitySet<PreferenceCategorie> PreferenceCategorie
		{
			get
			{
				return this._PreferenceCategorie;
			}
			set
			{
				this._PreferenceCategorie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategorieAide_TypeAide", Storage="_TypeAide", ThisKey="IdCategorie", OtherKey="IdCategorie")]
		public EntitySet<TypeAide> TypeAide
		{
			get
			{
				return this._TypeAide;
			}
			set
			{
				this._TypeAide.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreferenceCategorie(PreferenceCategorie entity)
		{
			this.SendPropertyChanging();
			entity.CategorieAide = this;
		}
		
		private void detach_PreferenceCategorie(PreferenceCategorie entity)
		{
			this.SendPropertyChanging();
			entity.CategorieAide = null;
		}
		
		private void attach_TypeAide(TypeAide entity)
		{
			this.SendPropertyChanging();
			entity.CategorieAide = this;
		}
		
		private void detach_TypeAide(TypeAide entity)
		{
			this.SendPropertyChanging();
			entity.CategorieAide = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CodePostal")]
	public partial class CodePostal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCodePostal;
		
		private System.Nullable<int> _CodePostal1;
		
		private EntitySet<Ville> _Ville;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCodePostalChanging(int value);
    partial void OnIdCodePostalChanged();
    partial void OnCodePostal1Changing(System.Nullable<int> value);
    partial void OnCodePostal1Changed();
    #endregion
		
		public CodePostal()
		{
			this._Ville = new EntitySet<Ville>(new Action<Ville>(this.attach_Ville), new Action<Ville>(this.detach_Ville));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCodePostal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCodePostal
		{
			get
			{
				return this._IdCodePostal;
			}
			set
			{
				if ((this._IdCodePostal != value))
				{
					this.OnIdCodePostalChanging(value);
					this.SendPropertyChanging();
					this._IdCodePostal = value;
					this.SendPropertyChanged("IdCodePostal");
					this.OnIdCodePostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CodePostal", Storage="_CodePostal1", DbType="Int")]
		public System.Nullable<int> CodePostal1
		{
			get
			{
				return this._CodePostal1;
			}
			set
			{
				if ((this._CodePostal1 != value))
				{
					this.OnCodePostal1Changing(value);
					this.SendPropertyChanging();
					this._CodePostal1 = value;
					this.SendPropertyChanged("CodePostal1");
					this.OnCodePostal1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CodePostal_Ville", Storage="_Ville", ThisKey="IdCodePostal", OtherKey="IdCodePostal")]
		public EntitySet<Ville> Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				this._Ville.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ville(Ville entity)
		{
			this.SendPropertyChanging();
			entity.CodePostal = this;
		}
		
		private void detach_Ville(Ville entity)
		{
			this.SendPropertyChanging();
			entity.CodePostal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandeMateriel")]
	public partial class DemandeMateriel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Quantite;
		
		private System.Nullable<int> _NumDemandeAide;
		
		private System.Nullable<int> _IdTypeMateriel;
		
		private int _IdDM;
		
		private EntityRef<TypeMateriel> _TypeMateriel;
		
		private EntityRef<DemandeAide> _DemandeAide;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuantiteChanging(System.Nullable<int> value);
    partial void OnQuantiteChanged();
    partial void OnNumDemandeAideChanging(System.Nullable<int> value);
    partial void OnNumDemandeAideChanged();
    partial void OnIdTypeMaterielChanging(System.Nullable<int> value);
    partial void OnIdTypeMaterielChanged();
    partial void OnIdDMChanging(int value);
    partial void OnIdDMChanged();
    #endregion
		
		public DemandeMateriel()
		{
			this._TypeMateriel = default(EntityRef<TypeMateriel>);
			this._DemandeAide = default(EntityRef<DemandeAide>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantite", DbType="Int")]
		public System.Nullable<int> Quantite
		{
			get
			{
				return this._Quantite;
			}
			set
			{
				if ((this._Quantite != value))
				{
					this.OnQuantiteChanging(value);
					this.SendPropertyChanging();
					this._Quantite = value;
					this.SendPropertyChanged("Quantite");
					this.OnQuantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDemandeAide", DbType="Int")]
		public System.Nullable<int> NumDemandeAide
		{
			get
			{
				return this._NumDemandeAide;
			}
			set
			{
				if ((this._NumDemandeAide != value))
				{
					if (this._DemandeAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumDemandeAideChanging(value);
					this.SendPropertyChanging();
					this._NumDemandeAide = value;
					this.SendPropertyChanged("NumDemandeAide");
					this.OnNumDemandeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeMateriel", DbType="Int")]
		public System.Nullable<int> IdTypeMateriel
		{
			get
			{
				return this._IdTypeMateriel;
			}
			set
			{
				if ((this._IdTypeMateriel != value))
				{
					if (this._TypeMateriel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeMaterielChanging(value);
					this.SendPropertyChanging();
					this._IdTypeMateriel = value;
					this.SendPropertyChanged("IdTypeMateriel");
					this.OnIdTypeMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDM
		{
			get
			{
				return this._IdDM;
			}
			set
			{
				if ((this._IdDM != value))
				{
					this.OnIdDMChanging(value);
					this.SendPropertyChanging();
					this._IdDM = value;
					this.SendPropertyChanged("IdDM");
					this.OnIdDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeMateriel_DemandeMateriel", Storage="_TypeMateriel", ThisKey="IdTypeMateriel", OtherKey="IdTypeMateriel", IsForeignKey=true)]
		public TypeMateriel TypeMateriel
		{
			get
			{
				return this._TypeMateriel.Entity;
			}
			set
			{
				TypeMateriel previousValue = this._TypeMateriel.Entity;
				if (((previousValue != value) 
							|| (this._TypeMateriel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeMateriel.Entity = null;
						previousValue.DemandeMateriel.Remove(this);
					}
					this._TypeMateriel.Entity = value;
					if ((value != null))
					{
						value.DemandeMateriel.Add(this);
						this._IdTypeMateriel = value.IdTypeMateriel;
					}
					else
					{
						this._IdTypeMateriel = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeMateriel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandeAide_DemandeMateriel", Storage="_DemandeAide", ThisKey="NumDemandeAide", OtherKey="NumDemandeAide", IsForeignKey=true)]
		public DemandeAide DemandeAide
		{
			get
			{
				return this._DemandeAide.Entity;
			}
			set
			{
				DemandeAide previousValue = this._DemandeAide.Entity;
				if (((previousValue != value) 
							|| (this._DemandeAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DemandeAide.Entity = null;
						previousValue.DemandeMateriel.Remove(this);
					}
					this._DemandeAide.Entity = value;
					if ((value != null))
					{
						value.DemandeMateriel.Add(this);
						this._NumDemandeAide = value.NumDemandeAide;
					}
					else
					{
						this._NumDemandeAide = default(Nullable<int>);
					}
					this.SendPropertyChanged("DemandeAide");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jour")]
	public partial class Jour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdJour;
		
		private string _LibelleJour;
		
		private EntitySet<AssociationPreferenceJour> _AssociationPreferenceJour;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdJourChanging(int value);
    partial void OnIdJourChanged();
    partial void OnLibelleJourChanging(string value);
    partial void OnLibelleJourChanged();
    #endregion
		
		public Jour()
		{
			this._AssociationPreferenceJour = new EntitySet<AssociationPreferenceJour>(new Action<AssociationPreferenceJour>(this.attach_AssociationPreferenceJour), new Action<AssociationPreferenceJour>(this.detach_AssociationPreferenceJour));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJour", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdJour
		{
			get
			{
				return this._IdJour;
			}
			set
			{
				if ((this._IdJour != value))
				{
					this.OnIdJourChanging(value);
					this.SendPropertyChanging();
					this._IdJour = value;
					this.SendPropertyChanged("IdJour");
					this.OnIdJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleJour", DbType="NChar(10)")]
		public string LibelleJour
		{
			get
			{
				return this._LibelleJour;
			}
			set
			{
				if ((this._LibelleJour != value))
				{
					this.OnLibelleJourChanging(value);
					this.SendPropertyChanging();
					this._LibelleJour = value;
					this.SendPropertyChanged("LibelleJour");
					this.OnLibelleJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jour_AssociationPreferenceJour", Storage="_AssociationPreferenceJour", ThisKey="IdJour", OtherKey="IdJour")]
		public EntitySet<AssociationPreferenceJour> AssociationPreferenceJour
		{
			get
			{
				return this._AssociationPreferenceJour;
			}
			set
			{
				this._AssociationPreferenceJour.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssociationPreferenceJour(AssociationPreferenceJour entity)
		{
			this.SendPropertyChanging();
			entity.Jour = this;
		}
		
		private void detach_AssociationPreferenceJour(AssociationPreferenceJour entity)
		{
			this.SendPropertyChanging();
			entity.Jour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pays")]
	public partial class Pays : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPays;
		
		private string _LibellePays;
		
		private EntitySet<Ville> _Ville;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaysChanging(int value);
    partial void OnIdPaysChanged();
    partial void OnLibellePaysChanging(string value);
    partial void OnLibellePaysChanged();
    #endregion
		
		public Pays()
		{
			this._Ville = new EntitySet<Ville>(new Action<Ville>(this.attach_Ville), new Action<Ville>(this.detach_Ville));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPays", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPays
		{
			get
			{
				return this._IdPays;
			}
			set
			{
				if ((this._IdPays != value))
				{
					this.OnIdPaysChanging(value);
					this.SendPropertyChanging();
					this._IdPays = value;
					this.SendPropertyChanged("IdPays");
					this.OnIdPaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibellePays", DbType="NChar(10)")]
		public string LibellePays
		{
			get
			{
				return this._LibellePays;
			}
			set
			{
				if ((this._LibellePays != value))
				{
					this.OnLibellePaysChanging(value);
					this.SendPropertyChanging();
					this._LibellePays = value;
					this.SendPropertyChanged("LibellePays");
					this.OnLibellePaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pays_Ville", Storage="_Ville", ThisKey="IdPays", OtherKey="IdPays")]
		public EntitySet<Ville> Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				this._Ville.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ville(Ville entity)
		{
			this.SendPropertyChanging();
			entity.Pays = this;
		}
		
		private void detach_Ville(Ville entity)
		{
			this.SendPropertyChanging();
			entity.Pays = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreferenceAide")]
	public partial class PreferenceAide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _DateDebutChoixPrefAide;
		
		private System.Nullable<System.DateTime> _DateFinChoixPrefAide;
		
		private System.Nullable<int> _IdTypeAide;
		
		private System.Nullable<int> _NumCompte;
		
		private int _IdPA;
		
		private EntityRef<TypeAide> _TypeAide;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateDebutChoixPrefAideChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChoixPrefAideChanged();
    partial void OnDateFinChoixPrefAideChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChoixPrefAideChanged();
    partial void OnIdTypeAideChanging(System.Nullable<int> value);
    partial void OnIdTypeAideChanged();
    partial void OnNumCompteChanging(System.Nullable<int> value);
    partial void OnNumCompteChanged();
    partial void OnIdPAChanging(int value);
    partial void OnIdPAChanged();
    #endregion
		
		public PreferenceAide()
		{
			this._TypeAide = default(EntityRef<TypeAide>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebutChoixPrefAide", DbType="Date")]
		public System.Nullable<System.DateTime> DateDebutChoixPrefAide
		{
			get
			{
				return this._DateDebutChoixPrefAide;
			}
			set
			{
				if ((this._DateDebutChoixPrefAide != value))
				{
					this.OnDateDebutChoixPrefAideChanging(value);
					this.SendPropertyChanging();
					this._DateDebutChoixPrefAide = value;
					this.SendPropertyChanged("DateDebutChoixPrefAide");
					this.OnDateDebutChoixPrefAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFinChoixPrefAide", DbType="Date")]
		public System.Nullable<System.DateTime> DateFinChoixPrefAide
		{
			get
			{
				return this._DateFinChoixPrefAide;
			}
			set
			{
				if ((this._DateFinChoixPrefAide != value))
				{
					this.OnDateFinChoixPrefAideChanging(value);
					this.SendPropertyChanging();
					this._DateFinChoixPrefAide = value;
					this.SendPropertyChanged("DateFinChoixPrefAide");
					this.OnDateFinChoixPrefAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeAide", DbType="Int")]
		public System.Nullable<int> IdTypeAide
		{
			get
			{
				return this._IdTypeAide;
			}
			set
			{
				if ((this._IdTypeAide != value))
				{
					if (this._TypeAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeAideChanging(value);
					this.SendPropertyChanging();
					this._IdTypeAide = value;
					this.SendPropertyChanged("IdTypeAide");
					this.OnIdTypeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="Int")]
		public System.Nullable<int> NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPA
		{
			get
			{
				return this._IdPA;
			}
			set
			{
				if ((this._IdPA != value))
				{
					this.OnIdPAChanging(value);
					this.SendPropertyChanging();
					this._IdPA = value;
					this.SendPropertyChanged("IdPA");
					this.OnIdPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAide_PreferenceAide", Storage="_TypeAide", ThisKey="IdTypeAide", OtherKey="IdTypeAide", IsForeignKey=true)]
		public TypeAide TypeAide
		{
			get
			{
				return this._TypeAide.Entity;
			}
			set
			{
				TypeAide previousValue = this._TypeAide.Entity;
				if (((previousValue != value) 
							|| (this._TypeAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeAide.Entity = null;
						previousValue.PreferenceAide.Remove(this);
					}
					this._TypeAide.Entity = value;
					if ((value != null))
					{
						value.PreferenceAide.Add(this);
						this._IdTypeAide = value.IdTypeAide;
					}
					else
					{
						this._IdTypeAide = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeAide");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_PreferenceAide", Storage="_Utilisateur", ThisKey="NumCompte", OtherKey="NumCompte", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.PreferenceAide.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.PreferenceAide.Add(this);
						this._NumCompte = value.NumCompte;
					}
					else
					{
						this._NumCompte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreferenceCategorie")]
	public partial class PreferenceCategorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _DateDebutChoixCategorie;
		
		private System.Nullable<System.DateTime> _DateFinChoixCategorie;
		
		private System.Nullable<int> _IdCategorie;
		
		private System.Nullable<int> _NumCompte;
		
		private int _Id;
		
		private EntityRef<CategorieAide> _CategorieAide;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateDebutChoixCategorieChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChoixCategorieChanged();
    partial void OnDateFinChoixCategorieChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChoixCategorieChanged();
    partial void OnIdCategorieChanging(System.Nullable<int> value);
    partial void OnIdCategorieChanged();
    partial void OnNumCompteChanging(System.Nullable<int> value);
    partial void OnNumCompteChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public PreferenceCategorie()
		{
			this._CategorieAide = default(EntityRef<CategorieAide>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebutChoixCategorie", DbType="Date")]
		public System.Nullable<System.DateTime> DateDebutChoixCategorie
		{
			get
			{
				return this._DateDebutChoixCategorie;
			}
			set
			{
				if ((this._DateDebutChoixCategorie != value))
				{
					this.OnDateDebutChoixCategorieChanging(value);
					this.SendPropertyChanging();
					this._DateDebutChoixCategorie = value;
					this.SendPropertyChanged("DateDebutChoixCategorie");
					this.OnDateDebutChoixCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFinChoixCategorie", DbType="Date")]
		public System.Nullable<System.DateTime> DateFinChoixCategorie
		{
			get
			{
				return this._DateFinChoixCategorie;
			}
			set
			{
				if ((this._DateFinChoixCategorie != value))
				{
					this.OnDateFinChoixCategorieChanging(value);
					this.SendPropertyChanging();
					this._DateFinChoixCategorie = value;
					this.SendPropertyChanged("DateFinChoixCategorie");
					this.OnDateFinChoixCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategorie", DbType="Int")]
		public System.Nullable<int> IdCategorie
		{
			get
			{
				return this._IdCategorie;
			}
			set
			{
				if ((this._IdCategorie != value))
				{
					if (this._CategorieAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategorieChanging(value);
					this.SendPropertyChanging();
					this._IdCategorie = value;
					this.SendPropertyChanged("IdCategorie");
					this.OnIdCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="Int")]
		public System.Nullable<int> NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategorieAide_PreferenceCategorie", Storage="_CategorieAide", ThisKey="IdCategorie", OtherKey="IdCategorie", IsForeignKey=true)]
		public CategorieAide CategorieAide
		{
			get
			{
				return this._CategorieAide.Entity;
			}
			set
			{
				CategorieAide previousValue = this._CategorieAide.Entity;
				if (((previousValue != value) 
							|| (this._CategorieAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategorieAide.Entity = null;
						previousValue.PreferenceCategorie.Remove(this);
					}
					this._CategorieAide.Entity = value;
					if ((value != null))
					{
						value.PreferenceCategorie.Add(this);
						this._IdCategorie = value.IdCategorie;
					}
					else
					{
						this._IdCategorie = default(Nullable<int>);
					}
					this.SendPropertyChanged("CategorieAide");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_PreferenceCategorie", Storage="_Utilisateur", ThisKey="NumCompte", OtherKey="NumCompte", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.PreferenceCategorie.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.PreferenceCategorie.Add(this);
						this._NumCompte = value.NumCompte;
					}
					else
					{
						this._NumCompte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repondre")]
	public partial class Repondre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _DateReponse;
		
		private System.Nullable<System.DateTime> _DateRenonciation;
		
		private System.Nullable<int> _NumDemandeAide;
		
		private System.Nullable<int> _NumCompte;
		
		private int _IdREP;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
		private EntityRef<DemandeAide> _DemandeAide;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateReponseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReponseChanged();
    partial void OnDateRenonciationChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRenonciationChanged();
    partial void OnNumDemandeAideChanging(System.Nullable<int> value);
    partial void OnNumDemandeAideChanged();
    partial void OnNumCompteChanging(System.Nullable<int> value);
    partial void OnNumCompteChanged();
    partial void OnIdREPChanging(int value);
    partial void OnIdREPChanged();
    #endregion
		
		public Repondre()
		{
			this._Utilisateur = default(EntityRef<Utilisateur>);
			this._DemandeAide = default(EntityRef<DemandeAide>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReponse", DbType="Date")]
		public System.Nullable<System.DateTime> DateReponse
		{
			get
			{
				return this._DateReponse;
			}
			set
			{
				if ((this._DateReponse != value))
				{
					this.OnDateReponseChanging(value);
					this.SendPropertyChanging();
					this._DateReponse = value;
					this.SendPropertyChanged("DateReponse");
					this.OnDateReponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRenonciation", DbType="Date")]
		public System.Nullable<System.DateTime> DateRenonciation
		{
			get
			{
				return this._DateRenonciation;
			}
			set
			{
				if ((this._DateRenonciation != value))
				{
					this.OnDateRenonciationChanging(value);
					this.SendPropertyChanging();
					this._DateRenonciation = value;
					this.SendPropertyChanged("DateRenonciation");
					this.OnDateRenonciationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDemandeAide", DbType="Int")]
		public System.Nullable<int> NumDemandeAide
		{
			get
			{
				return this._NumDemandeAide;
			}
			set
			{
				if ((this._NumDemandeAide != value))
				{
					if (this._DemandeAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumDemandeAideChanging(value);
					this.SendPropertyChanging();
					this._NumDemandeAide = value;
					this.SendPropertyChanged("NumDemandeAide");
					this.OnNumDemandeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="Int")]
		public System.Nullable<int> NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdREP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdREP
		{
			get
			{
				return this._IdREP;
			}
			set
			{
				if ((this._IdREP != value))
				{
					this.OnIdREPChanging(value);
					this.SendPropertyChanging();
					this._IdREP = value;
					this.SendPropertyChanged("IdREP");
					this.OnIdREPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Repondre", Storage="_Utilisateur", ThisKey="NumCompte", OtherKey="NumCompte", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.Repondre.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.Repondre.Add(this);
						this._NumCompte = value.NumCompte;
					}
					else
					{
						this._NumCompte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandeAide_Repondre", Storage="_DemandeAide", ThisKey="NumDemandeAide", OtherKey="NumDemandeAide", IsForeignKey=true)]
		public DemandeAide DemandeAide
		{
			get
			{
				return this._DemandeAide.Entity;
			}
			set
			{
				DemandeAide previousValue = this._DemandeAide.Entity;
				if (((previousValue != value) 
							|| (this._DemandeAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DemandeAide.Entity = null;
						previousValue.Repondre.Remove(this);
					}
					this._DemandeAide.Entity = value;
					if ((value != null))
					{
						value.Repondre.Add(this);
						this._NumDemandeAide = value.NumDemandeAide;
					}
					else
					{
						this._NumDemandeAide = default(Nullable<int>);
					}
					this.SendPropertyChanged("DemandeAide");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeAide")]
	public partial class TypeAide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypeAide;
		
		private string _LibelleAide;
		
		private int _IdCategorie;
		
		private EntitySet<BesoinMateriel> _BesoinMateriel;
		
		private EntitySet<PreferenceAide> _PreferenceAide;
		
		private EntitySet<DemandeAide> _DemandeAide;
		
		private EntityRef<CategorieAide> _CategorieAide;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeAideChanging(int value);
    partial void OnIdTypeAideChanged();
    partial void OnLibelleAideChanging(string value);
    partial void OnLibelleAideChanged();
    partial void OnIdCategorieChanging(int value);
    partial void OnIdCategorieChanged();
    #endregion
		
		public TypeAide()
		{
			this._BesoinMateriel = new EntitySet<BesoinMateriel>(new Action<BesoinMateriel>(this.attach_BesoinMateriel), new Action<BesoinMateriel>(this.detach_BesoinMateriel));
			this._PreferenceAide = new EntitySet<PreferenceAide>(new Action<PreferenceAide>(this.attach_PreferenceAide), new Action<PreferenceAide>(this.detach_PreferenceAide));
			this._DemandeAide = new EntitySet<DemandeAide>(new Action<DemandeAide>(this.attach_DemandeAide), new Action<DemandeAide>(this.detach_DemandeAide));
			this._CategorieAide = default(EntityRef<CategorieAide>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeAide", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTypeAide
		{
			get
			{
				return this._IdTypeAide;
			}
			set
			{
				if ((this._IdTypeAide != value))
				{
					this.OnIdTypeAideChanging(value);
					this.SendPropertyChanging();
					this._IdTypeAide = value;
					this.SendPropertyChanged("IdTypeAide");
					this.OnIdTypeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleAide", DbType="NVarChar(50)")]
		public string LibelleAide
		{
			get
			{
				return this._LibelleAide;
			}
			set
			{
				if ((this._LibelleAide != value))
				{
					this.OnLibelleAideChanging(value);
					this.SendPropertyChanging();
					this._LibelleAide = value;
					this.SendPropertyChanged("LibelleAide");
					this.OnLibelleAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategorie", DbType="Int NOT NULL")]
		public int IdCategorie
		{
			get
			{
				return this._IdCategorie;
			}
			set
			{
				if ((this._IdCategorie != value))
				{
					if (this._CategorieAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategorieChanging(value);
					this.SendPropertyChanging();
					this._IdCategorie = value;
					this.SendPropertyChanged("IdCategorie");
					this.OnIdCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAide_BesoinMateriel", Storage="_BesoinMateriel", ThisKey="IdTypeAide", OtherKey="IdTypeAide")]
		public EntitySet<BesoinMateriel> BesoinMateriel
		{
			get
			{
				return this._BesoinMateriel;
			}
			set
			{
				this._BesoinMateriel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAide_PreferenceAide", Storage="_PreferenceAide", ThisKey="IdTypeAide", OtherKey="IdTypeAide")]
		public EntitySet<PreferenceAide> PreferenceAide
		{
			get
			{
				return this._PreferenceAide;
			}
			set
			{
				this._PreferenceAide.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAide_DemandeAide", Storage="_DemandeAide", ThisKey="IdTypeAide", OtherKey="IdTypeAide")]
		public EntitySet<DemandeAide> DemandeAide
		{
			get
			{
				return this._DemandeAide;
			}
			set
			{
				this._DemandeAide.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategorieAide_TypeAide", Storage="_CategorieAide", ThisKey="IdCategorie", OtherKey="IdCategorie", IsForeignKey=true)]
		public CategorieAide CategorieAide
		{
			get
			{
				return this._CategorieAide.Entity;
			}
			set
			{
				CategorieAide previousValue = this._CategorieAide.Entity;
				if (((previousValue != value) 
							|| (this._CategorieAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategorieAide.Entity = null;
						previousValue.TypeAide.Remove(this);
					}
					this._CategorieAide.Entity = value;
					if ((value != null))
					{
						value.TypeAide.Add(this);
						this._IdCategorie = value.IdCategorie;
					}
					else
					{
						this._IdCategorie = default(int);
					}
					this.SendPropertyChanged("CategorieAide");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BesoinMateriel(BesoinMateriel entity)
		{
			this.SendPropertyChanging();
			entity.TypeAide = this;
		}
		
		private void detach_BesoinMateriel(BesoinMateriel entity)
		{
			this.SendPropertyChanging();
			entity.TypeAide = null;
		}
		
		private void attach_PreferenceAide(PreferenceAide entity)
		{
			this.SendPropertyChanging();
			entity.TypeAide = this;
		}
		
		private void detach_PreferenceAide(PreferenceAide entity)
		{
			this.SendPropertyChanging();
			entity.TypeAide = null;
		}
		
		private void attach_DemandeAide(DemandeAide entity)
		{
			this.SendPropertyChanging();
			entity.TypeAide = this;
		}
		
		private void detach_DemandeAide(DemandeAide entity)
		{
			this.SendPropertyChanging();
			entity.TypeAide = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeMateriel")]
	public partial class TypeMateriel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypeMateriel;
		
		private string _LibelleTypeMateriel;
		
		private EntitySet<BesoinMateriel> _BesoinMateriel;
		
		private EntitySet<DemandeMateriel> _DemandeMateriel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeMaterielChanging(int value);
    partial void OnIdTypeMaterielChanged();
    partial void OnLibelleTypeMaterielChanging(string value);
    partial void OnLibelleTypeMaterielChanged();
    #endregion
		
		public TypeMateriel()
		{
			this._BesoinMateriel = new EntitySet<BesoinMateriel>(new Action<BesoinMateriel>(this.attach_BesoinMateriel), new Action<BesoinMateriel>(this.detach_BesoinMateriel));
			this._DemandeMateriel = new EntitySet<DemandeMateriel>(new Action<DemandeMateriel>(this.attach_DemandeMateriel), new Action<DemandeMateriel>(this.detach_DemandeMateriel));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeMateriel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTypeMateriel
		{
			get
			{
				return this._IdTypeMateriel;
			}
			set
			{
				if ((this._IdTypeMateriel != value))
				{
					this.OnIdTypeMaterielChanging(value);
					this.SendPropertyChanging();
					this._IdTypeMateriel = value;
					this.SendPropertyChanged("IdTypeMateriel");
					this.OnIdTypeMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleTypeMateriel", DbType="NVarChar(50)")]
		public string LibelleTypeMateriel
		{
			get
			{
				return this._LibelleTypeMateriel;
			}
			set
			{
				if ((this._LibelleTypeMateriel != value))
				{
					this.OnLibelleTypeMaterielChanging(value);
					this.SendPropertyChanging();
					this._LibelleTypeMateriel = value;
					this.SendPropertyChanged("LibelleTypeMateriel");
					this.OnLibelleTypeMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeMateriel_BesoinMateriel", Storage="_BesoinMateriel", ThisKey="IdTypeMateriel", OtherKey="IdTypeMateriel")]
		public EntitySet<BesoinMateriel> BesoinMateriel
		{
			get
			{
				return this._BesoinMateriel;
			}
			set
			{
				this._BesoinMateriel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeMateriel_DemandeMateriel", Storage="_DemandeMateriel", ThisKey="IdTypeMateriel", OtherKey="IdTypeMateriel")]
		public EntitySet<DemandeMateriel> DemandeMateriel
		{
			get
			{
				return this._DemandeMateriel;
			}
			set
			{
				this._DemandeMateriel.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BesoinMateriel(BesoinMateriel entity)
		{
			this.SendPropertyChanging();
			entity.TypeMateriel = this;
		}
		
		private void detach_BesoinMateriel(BesoinMateriel entity)
		{
			this.SendPropertyChanging();
			entity.TypeMateriel = null;
		}
		
		private void attach_DemandeMateriel(DemandeMateriel entity)
		{
			this.SendPropertyChanging();
			entity.TypeMateriel = this;
		}
		
		private void detach_DemandeMateriel(DemandeMateriel entity)
		{
			this.SendPropertyChanging();
			entity.TypeMateriel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumCompte;
		
		private string _Nom;
		
		private string _Prenom;
		
		private System.Nullable<System.DateTime> _DateDeNaissance;
		
		private string _DenominationRue;
		
		private string _Email;
		
		private System.Nullable<int> _NumeroTelephone;
		
		private System.Nullable<int> _NumeroPortable;
		
		private string _Login;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _DateInscription;
		
		private System.Nullable<System.DateTime> _DateDeinscription;
		
		private System.Nullable<int> _IdVille;
		
		private EntitySet<AssociationPreferenceJour> _AssociationPreferenceJour;
		
		private EntitySet<PreferenceAide> _PreferenceAide;
		
		private EntitySet<PreferenceCategorie> _PreferenceCategorie;
		
		private EntitySet<Repondre> _Repondre;
		
		private EntitySet<DemandeAide> _DemandeAide;
		
		private EntityRef<Ville> _Ville;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumCompteChanging(int value);
    partial void OnNumCompteChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnDateDeNaissanceChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeNaissanceChanged();
    partial void OnDenominationRueChanging(string value);
    partial void OnDenominationRueChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNumeroTelephoneChanging(System.Nullable<int> value);
    partial void OnNumeroTelephoneChanged();
    partial void OnNumeroPortableChanging(System.Nullable<int> value);
    partial void OnNumeroPortableChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDateInscriptionChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInscriptionChanged();
    partial void OnDateDeinscriptionChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeinscriptionChanged();
    partial void OnIdVilleChanging(System.Nullable<int> value);
    partial void OnIdVilleChanged();
    #endregion
		
		public Utilisateur()
		{
			this._AssociationPreferenceJour = new EntitySet<AssociationPreferenceJour>(new Action<AssociationPreferenceJour>(this.attach_AssociationPreferenceJour), new Action<AssociationPreferenceJour>(this.detach_AssociationPreferenceJour));
			this._PreferenceAide = new EntitySet<PreferenceAide>(new Action<PreferenceAide>(this.attach_PreferenceAide), new Action<PreferenceAide>(this.detach_PreferenceAide));
			this._PreferenceCategorie = new EntitySet<PreferenceCategorie>(new Action<PreferenceCategorie>(this.attach_PreferenceCategorie), new Action<PreferenceCategorie>(this.detach_PreferenceCategorie));
			this._Repondre = new EntitySet<Repondre>(new Action<Repondre>(this.attach_Repondre), new Action<Repondre>(this.detach_Repondre));
			this._DemandeAide = new EntitySet<DemandeAide>(new Action<DemandeAide>(this.attach_DemandeAide), new Action<DemandeAide>(this.detach_DemandeAide));
			this._Ville = default(EntityRef<Ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="NVarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeNaissance", DbType="Date")]
		public System.Nullable<System.DateTime> DateDeNaissance
		{
			get
			{
				return this._DateDeNaissance;
			}
			set
			{
				if ((this._DateDeNaissance != value))
				{
					this.OnDateDeNaissanceChanging(value);
					this.SendPropertyChanging();
					this._DateDeNaissance = value;
					this.SendPropertyChanged("DateDeNaissance");
					this.OnDateDeNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenominationRue", DbType="NVarChar(50)")]
		public string DenominationRue
		{
			get
			{
				return this._DenominationRue;
			}
			set
			{
				if ((this._DenominationRue != value))
				{
					this.OnDenominationRueChanging(value);
					this.SendPropertyChanging();
					this._DenominationRue = value;
					this.SendPropertyChanged("DenominationRue");
					this.OnDenominationRueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelephone", DbType="Int")]
		public System.Nullable<int> NumeroTelephone
		{
			get
			{
				return this._NumeroTelephone;
			}
			set
			{
				if ((this._NumeroTelephone != value))
				{
					this.OnNumeroTelephoneChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelephone = value;
					this.SendPropertyChanged("NumeroTelephone");
					this.OnNumeroTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPortable", DbType="Int")]
		public System.Nullable<int> NumeroPortable
		{
			get
			{
				return this._NumeroPortable;
			}
			set
			{
				if ((this._NumeroPortable != value))
				{
					this.OnNumeroPortableChanging(value);
					this.SendPropertyChanging();
					this._NumeroPortable = value;
					this.SendPropertyChanged("NumeroPortable");
					this.OnNumeroPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInscription", DbType="Date")]
		public System.Nullable<System.DateTime> DateInscription
		{
			get
			{
				return this._DateInscription;
			}
			set
			{
				if ((this._DateInscription != value))
				{
					this.OnDateInscriptionChanging(value);
					this.SendPropertyChanging();
					this._DateInscription = value;
					this.SendPropertyChanged("DateInscription");
					this.OnDateInscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeinscription", DbType="Date")]
		public System.Nullable<System.DateTime> DateDeinscription
		{
			get
			{
				return this._DateDeinscription;
			}
			set
			{
				if ((this._DateDeinscription != value))
				{
					this.OnDateDeinscriptionChanging(value);
					this.SendPropertyChanging();
					this._DateDeinscription = value;
					this.SendPropertyChanged("DateDeinscription");
					this.OnDateDeinscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVille", DbType="Int")]
		public System.Nullable<int> IdVille
		{
			get
			{
				return this._IdVille;
			}
			set
			{
				if ((this._IdVille != value))
				{
					if (this._Ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVilleChanging(value);
					this.SendPropertyChanging();
					this._IdVille = value;
					this.SendPropertyChanged("IdVille");
					this.OnIdVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_AssociationPreferenceJour", Storage="_AssociationPreferenceJour", ThisKey="NumCompte", OtherKey="NumCompte")]
		public EntitySet<AssociationPreferenceJour> AssociationPreferenceJour
		{
			get
			{
				return this._AssociationPreferenceJour;
			}
			set
			{
				this._AssociationPreferenceJour.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_PreferenceAide", Storage="_PreferenceAide", ThisKey="NumCompte", OtherKey="NumCompte")]
		public EntitySet<PreferenceAide> PreferenceAide
		{
			get
			{
				return this._PreferenceAide;
			}
			set
			{
				this._PreferenceAide.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_PreferenceCategorie", Storage="_PreferenceCategorie", ThisKey="NumCompte", OtherKey="NumCompte")]
		public EntitySet<PreferenceCategorie> PreferenceCategorie
		{
			get
			{
				return this._PreferenceCategorie;
			}
			set
			{
				this._PreferenceCategorie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Repondre", Storage="_Repondre", ThisKey="NumCompte", OtherKey="NumCompte")]
		public EntitySet<Repondre> Repondre
		{
			get
			{
				return this._Repondre;
			}
			set
			{
				this._Repondre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_DemandeAide", Storage="_DemandeAide", ThisKey="NumCompte", OtherKey="NumCompte")]
		public EntitySet<DemandeAide> DemandeAide
		{
			get
			{
				return this._DemandeAide;
			}
			set
			{
				this._DemandeAide.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Utilisateur", Storage="_Ville", ThisKey="IdVille", OtherKey="IdVille", IsForeignKey=true)]
		public Ville Ville
		{
			get
			{
				return this._Ville.Entity;
			}
			set
			{
				Ville previousValue = this._Ville.Entity;
				if (((previousValue != value) 
							|| (this._Ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ville.Entity = null;
						previousValue.Utilisateur.Remove(this);
					}
					this._Ville.Entity = value;
					if ((value != null))
					{
						value.Utilisateur.Add(this);
						this._IdVille = value.IdVille;
					}
					else
					{
						this._IdVille = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssociationPreferenceJour(AssociationPreferenceJour entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_AssociationPreferenceJour(AssociationPreferenceJour entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_PreferenceAide(PreferenceAide entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_PreferenceAide(PreferenceAide entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_PreferenceCategorie(PreferenceCategorie entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_PreferenceCategorie(PreferenceCategorie entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_Repondre(Repondre entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_Repondre(Repondre entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_DemandeAide(DemandeAide entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_DemandeAide(DemandeAide entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ville")]
	public partial class Ville : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVille;
		
		private string _LibelleVille;
		
		private System.Nullable<int> _IdPays;
		
		private System.Nullable<int> _IdCodePostal;
		
		private EntitySet<Utilisateur> _Utilisateur;
		
		private EntityRef<CodePostal> _CodePostal;
		
		private EntityRef<Pays> _Pays;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVilleChanging(int value);
    partial void OnIdVilleChanged();
    partial void OnLibelleVilleChanging(string value);
    partial void OnLibelleVilleChanged();
    partial void OnIdPaysChanging(System.Nullable<int> value);
    partial void OnIdPaysChanged();
    partial void OnIdCodePostalChanging(System.Nullable<int> value);
    partial void OnIdCodePostalChanged();
    #endregion
		
		public Ville()
		{
			this._Utilisateur = new EntitySet<Utilisateur>(new Action<Utilisateur>(this.attach_Utilisateur), new Action<Utilisateur>(this.detach_Utilisateur));
			this._CodePostal = default(EntityRef<CodePostal>);
			this._Pays = default(EntityRef<Pays>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVille", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVille
		{
			get
			{
				return this._IdVille;
			}
			set
			{
				if ((this._IdVille != value))
				{
					this.OnIdVilleChanging(value);
					this.SendPropertyChanging();
					this._IdVille = value;
					this.SendPropertyChanged("IdVille");
					this.OnIdVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleVille", DbType="NVarChar(50)")]
		public string LibelleVille
		{
			get
			{
				return this._LibelleVille;
			}
			set
			{
				if ((this._LibelleVille != value))
				{
					this.OnLibelleVilleChanging(value);
					this.SendPropertyChanging();
					this._LibelleVille = value;
					this.SendPropertyChanged("LibelleVille");
					this.OnLibelleVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPays", DbType="Int")]
		public System.Nullable<int> IdPays
		{
			get
			{
				return this._IdPays;
			}
			set
			{
				if ((this._IdPays != value))
				{
					if (this._Pays.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaysChanging(value);
					this.SendPropertyChanging();
					this._IdPays = value;
					this.SendPropertyChanged("IdPays");
					this.OnIdPaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCodePostal", DbType="Int")]
		public System.Nullable<int> IdCodePostal
		{
			get
			{
				return this._IdCodePostal;
			}
			set
			{
				if ((this._IdCodePostal != value))
				{
					if (this._CodePostal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCodePostalChanging(value);
					this.SendPropertyChanging();
					this._IdCodePostal = value;
					this.SendPropertyChanged("IdCodePostal");
					this.OnIdCodePostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Utilisateur", Storage="_Utilisateur", ThisKey="IdVille", OtherKey="IdVille")]
		public EntitySet<Utilisateur> Utilisateur
		{
			get
			{
				return this._Utilisateur;
			}
			set
			{
				this._Utilisateur.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CodePostal_Ville", Storage="_CodePostal", ThisKey="IdCodePostal", OtherKey="IdCodePostal", IsForeignKey=true)]
		public CodePostal CodePostal
		{
			get
			{
				return this._CodePostal.Entity;
			}
			set
			{
				CodePostal previousValue = this._CodePostal.Entity;
				if (((previousValue != value) 
							|| (this._CodePostal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodePostal.Entity = null;
						previousValue.Ville.Remove(this);
					}
					this._CodePostal.Entity = value;
					if ((value != null))
					{
						value.Ville.Add(this);
						this._IdCodePostal = value.IdCodePostal;
					}
					else
					{
						this._IdCodePostal = default(Nullable<int>);
					}
					this.SendPropertyChanged("CodePostal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pays_Ville", Storage="_Pays", ThisKey="IdPays", OtherKey="IdPays", IsForeignKey=true)]
		public Pays Pays
		{
			get
			{
				return this._Pays.Entity;
			}
			set
			{
				Pays previousValue = this._Pays.Entity;
				if (((previousValue != value) 
							|| (this._Pays.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pays.Entity = null;
						previousValue.Ville.Remove(this);
					}
					this._Pays.Entity = value;
					if ((value != null))
					{
						value.Ville.Add(this);
						this._IdPays = value.IdPays;
					}
					else
					{
						this._IdPays = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pays");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilisateur(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = this;
		}
		
		private void detach_Utilisateur(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandeAide")]
	public partial class DemandeAide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumDemandeAide;
		
		private string _Description;
		
		private string _DateDepotDemande;
		
		private string _NoteBeneficiaire;
		
		private string _NoteVolontaire;
		
		private string _DateAnnulationDemande;
		
		private string _DateTraitement;
		
		private System.Nullable<int> _NumCompte;
		
		private System.Nullable<int> _IdTypeAide;
		
		private string _HeureTraitement;
		
		private EntitySet<DemandeMateriel> _DemandeMateriel;
		
		private EntitySet<Repondre> _Repondre;
		
		private EntityRef<TypeAide> _TypeAide;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumDemandeAideChanging(int value);
    partial void OnNumDemandeAideChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateDepotDemandeChanging(string value);
    partial void OnDateDepotDemandeChanged();
    partial void OnNoteBeneficiaireChanging(string value);
    partial void OnNoteBeneficiaireChanged();
    partial void OnNoteVolontaireChanging(string value);
    partial void OnNoteVolontaireChanged();
    partial void OnDateAnnulationDemandeChanging(string value);
    partial void OnDateAnnulationDemandeChanged();
    partial void OnDateTraitementChanging(string value);
    partial void OnDateTraitementChanged();
    partial void OnNumCompteChanging(System.Nullable<int> value);
    partial void OnNumCompteChanged();
    partial void OnIdTypeAideChanging(System.Nullable<int> value);
    partial void OnIdTypeAideChanged();
    partial void OnHeureTraitementChanging(string value);
    partial void OnHeureTraitementChanged();
    #endregion
		
		public DemandeAide()
		{
			this._DemandeMateriel = new EntitySet<DemandeMateriel>(new Action<DemandeMateriel>(this.attach_DemandeMateriel), new Action<DemandeMateriel>(this.detach_DemandeMateriel));
			this._Repondre = new EntitySet<Repondre>(new Action<Repondre>(this.attach_Repondre), new Action<Repondre>(this.detach_Repondre));
			this._TypeAide = default(EntityRef<TypeAide>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDemandeAide", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumDemandeAide
		{
			get
			{
				return this._NumDemandeAide;
			}
			set
			{
				if ((this._NumDemandeAide != value))
				{
					this.OnNumDemandeAideChanging(value);
					this.SendPropertyChanging();
					this._NumDemandeAide = value;
					this.SendPropertyChanged("NumDemandeAide");
					this.OnNumDemandeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(10)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDepotDemande", DbType="NChar(10)")]
		public string DateDepotDemande
		{
			get
			{
				return this._DateDepotDemande;
			}
			set
			{
				if ((this._DateDepotDemande != value))
				{
					this.OnDateDepotDemandeChanging(value);
					this.SendPropertyChanging();
					this._DateDepotDemande = value;
					this.SendPropertyChanged("DateDepotDemande");
					this.OnDateDepotDemandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteBeneficiaire", DbType="NChar(10)")]
		public string NoteBeneficiaire
		{
			get
			{
				return this._NoteBeneficiaire;
			}
			set
			{
				if ((this._NoteBeneficiaire != value))
				{
					this.OnNoteBeneficiaireChanging(value);
					this.SendPropertyChanging();
					this._NoteBeneficiaire = value;
					this.SendPropertyChanged("NoteBeneficiaire");
					this.OnNoteBeneficiaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteVolontaire", DbType="NChar(10)")]
		public string NoteVolontaire
		{
			get
			{
				return this._NoteVolontaire;
			}
			set
			{
				if ((this._NoteVolontaire != value))
				{
					this.OnNoteVolontaireChanging(value);
					this.SendPropertyChanging();
					this._NoteVolontaire = value;
					this.SendPropertyChanged("NoteVolontaire");
					this.OnNoteVolontaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAnnulationDemande", DbType="NChar(10)")]
		public string DateAnnulationDemande
		{
			get
			{
				return this._DateAnnulationDemande;
			}
			set
			{
				if ((this._DateAnnulationDemande != value))
				{
					this.OnDateAnnulationDemandeChanging(value);
					this.SendPropertyChanging();
					this._DateAnnulationDemande = value;
					this.SendPropertyChanged("DateAnnulationDemande");
					this.OnDateAnnulationDemandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTraitement", DbType="NChar(10)")]
		public string DateTraitement
		{
			get
			{
				return this._DateTraitement;
			}
			set
			{
				if ((this._DateTraitement != value))
				{
					this.OnDateTraitementChanging(value);
					this.SendPropertyChanging();
					this._DateTraitement = value;
					this.SendPropertyChanged("DateTraitement");
					this.OnDateTraitementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCompte", DbType="Int")]
		public System.Nullable<int> NumCompte
		{
			get
			{
				return this._NumCompte;
			}
			set
			{
				if ((this._NumCompte != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumCompteChanging(value);
					this.SendPropertyChanging();
					this._NumCompte = value;
					this.SendPropertyChanged("NumCompte");
					this.OnNumCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeAide", DbType="Int")]
		public System.Nullable<int> IdTypeAide
		{
			get
			{
				return this._IdTypeAide;
			}
			set
			{
				if ((this._IdTypeAide != value))
				{
					if (this._TypeAide.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeAideChanging(value);
					this.SendPropertyChanging();
					this._IdTypeAide = value;
					this.SendPropertyChanged("IdTypeAide");
					this.OnIdTypeAideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeureTraitement", DbType="NChar(10)")]
		public string HeureTraitement
		{
			get
			{
				return this._HeureTraitement;
			}
			set
			{
				if ((this._HeureTraitement != value))
				{
					this.OnHeureTraitementChanging(value);
					this.SendPropertyChanging();
					this._HeureTraitement = value;
					this.SendPropertyChanged("HeureTraitement");
					this.OnHeureTraitementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandeAide_DemandeMateriel", Storage="_DemandeMateriel", ThisKey="NumDemandeAide", OtherKey="NumDemandeAide")]
		public EntitySet<DemandeMateriel> DemandeMateriel
		{
			get
			{
				return this._DemandeMateriel;
			}
			set
			{
				this._DemandeMateriel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandeAide_Repondre", Storage="_Repondre", ThisKey="NumDemandeAide", OtherKey="NumDemandeAide")]
		public EntitySet<Repondre> Repondre
		{
			get
			{
				return this._Repondre;
			}
			set
			{
				this._Repondre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAide_DemandeAide", Storage="_TypeAide", ThisKey="IdTypeAide", OtherKey="IdTypeAide", IsForeignKey=true)]
		public TypeAide TypeAide
		{
			get
			{
				return this._TypeAide.Entity;
			}
			set
			{
				TypeAide previousValue = this._TypeAide.Entity;
				if (((previousValue != value) 
							|| (this._TypeAide.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeAide.Entity = null;
						previousValue.DemandeAide.Remove(this);
					}
					this._TypeAide.Entity = value;
					if ((value != null))
					{
						value.DemandeAide.Add(this);
						this._IdTypeAide = value.IdTypeAide;
					}
					else
					{
						this._IdTypeAide = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeAide");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_DemandeAide", Storage="_Utilisateur", ThisKey="NumCompte", OtherKey="NumCompte", IsForeignKey=true)]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.DemandeAide.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.DemandeAide.Add(this);
						this._NumCompte = value.NumCompte;
					}
					else
					{
						this._NumCompte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DemandeMateriel(DemandeMateriel entity)
		{
			this.SendPropertyChanging();
			entity.DemandeAide = this;
		}
		
		private void detach_DemandeMateriel(DemandeMateriel entity)
		{
			this.SendPropertyChanging();
			entity.DemandeAide = null;
		}
		
		private void attach_Repondre(Repondre entity)
		{
			this.SendPropertyChanging();
			entity.DemandeAide = this;
		}
		
		private void detach_Repondre(Repondre entity)
		{
			this.SendPropertyChanging();
			entity.DemandeAide = null;
		}
	}
}
#pragma warning restore 1591
